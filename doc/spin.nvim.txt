*spin.nvim.txt*         For NVIM v0.8.0         Last change: 2023 September 09

==============================================================================
Table of Contents                                *spin.nvim-table-of-contents*

1. spin.nvim                                             |spin.nvim-spin.nvim|
  - Features                                    |spin.nvim-spin.nvim-features|
  - Requirements                            |spin.nvim-spin.nvim-requirements|
  - Installation                            |spin.nvim-spin.nvim-installation|
  - Configuration                          |spin.nvim-spin.nvim-configuration|
  - Usage                                          |spin.nvim-spin.nvim-usage|

==============================================================================
1. spin.nvim                                             *spin.nvim-spin.nvim*

A plugin for interacting with the verification tool spin
<https://spinroot.com/spin/whatispin.html>.


FEATURES                                        *spin.nvim-spin.nvim-features*

- Validates promela <https://en.wikipedia.org/wiki/Promela> syntax and sends reports using the diagnostics framework.
- Hover capabilities using LSP (currently lacks support for structs/typedef).
- Execute spin commands, see |spin.nvim-usage|.


REQUIREMENTS                                *spin.nvim-spin.nvim-requirements*

- The spin <https://spinroot.com/spin/whatispin.html> tool itself
- gcc (optional)

Run `:checkhealth spin` to ensure that the plugin is working correctly.


INSTALLATION                                *spin.nvim-spin.nvim-installation*

Install with your package manager:


LAZY.NVIM ~

>lua
    return {
      "sebostien/spin.nvim",
      ft = { "promela" },
      opts = {
        -- Your configuration or empty to use the default settings
      }
    }
<


PACKER.NVIM ~

>lua
    use {
      "sebostien/spin.nvim",
      config = function()
        require("spin").setup({
          -- Your configuration or empty to use the default settings
        })
      end
    }
<


CONFIGURATION                              *spin.nvim-spin.nvim-configuration*

The default settings are listed below:

>lua
    {
      check_on_save = true,             -- Run check on file save
      check_on_insert_leave = false,    -- Run check when leaving insert mode
      generate_command = "spin -a",     -- Command to generate verifier
      trail_command = "spin -t -p -l",  -- Command to follow simulation trail
      gcc_command = "gcc -o pan pan.c", -- Command to compile verifier
      on_attach = function(client, bufnr)
        -- Set keybindings, etc. here
        -- bind `K` to hover
        -- vim.keymap.set("n", "K", vim.lsp.buf.hover)
      end,
    }
<


USAGE                                              *spin.nvim-spin.nvim-usage*


COMMANDS ~

- `:SpinCheck` Check syntax in the current buffer.
- `:SpinGenerate` Generate verifier for current buffer.
- `:SpinVerify` Generate and run verifier for current buffer.
    Opens output in a new buffer (exit with `q` or `<Esc>`).
- `:SpinTrail` Follow trail from a failed verification of the current buffer.

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
